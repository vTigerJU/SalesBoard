@model SalesBoard.Models.Item
@inject SignInManager<ApplicationUser> SignInManager
@using Microsoft.AspNetCore.Identity

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Item</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Quantity)
        </dd>
    </dl>
</div>
<div class="d-flex">
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("User"))
    {
        <form asp-action="Purchase" asp-route-id="@Model.Id">
            <input type="number" name="quantity" min="1" max="@Model.Quantity" step="1" value="1" />
            <input type="submit" value="Purchase" class="btn btn-primary" />
        </form>
    }    
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id"> Edit |</a>
    }
    <a asp-action="Index">Back to List</a>
</div>
